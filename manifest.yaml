id: lastpaywins
title: "Last Pay Wins"
version: 0.0.0.1
release-notes: "Initial pleb release"
license: mit
wrapper-repo: "https://github.com/islandbitcoin/lastpaywins-wrapper"
upstream-repo: "https://github.com/alexlwn123/LastPayWins"
support-site: "https://github.com/alexlwn123/LastPayWins/issues"
marketing-site: "https://lastpaywins.com/"
donation-url: "https://atlbitlab.com/donations"
build: ["make"]
description:
  short: Similar to FOMO3D, but with sats.
  long: |
    It's Reddit's r/thebutton but with sats... Last one to pay when the timer hits zero wins. Paying the invoice resets the timer.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /app/data
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
health-checks:
  main:
    name: Web Interface
    success-message: Last Pay Wins is ready to visit in a web browser
    type: docker
    image: main
    entrypoint: "check-web.sh"
    args: []
    inject: true
    system: false
    io-format: json
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: /shared
    readonly: true
interfaces:
  main:
    name: Last Pay Wins Web Interface
    description: Specifies the interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "3000"
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  lnd:
    version: ">=0.14.3 <0.17.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: "required"
    config: ~
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /app/data/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/app/data/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /app/data/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/app/data/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
